version: '3.8'

services:

  postgres:
    container_name: postgres
    hostname: postgres
    network_mode: bridge
    build: 
      context: ./postgres
      dockerfile: Dockerfile
    env_file:
      - ./postgres/vars.env
    deploy:
      resources:
        limits:
          cpus: '0.85'
          memory: '250MB'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  api01:
    container_name: api01
    hostname: api01
    network_mode: bridge
    build: 
      context: ./app
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '100MB' 

  api02:
    container_name: api02
    hostname: api02
    network_mode: bridge
    build: 
      context: ./app
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '100MB'    

  nginx:
    container_name: nginx
    hostname: nginx
    network_mode: bridge
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "9999:9999"
    depends_on:
      api01:
        condition: service_healthy 
      api02:
        condition: service_healthy           
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '100MB'

  # development container to run drogon_ctl.
  # created here in order to be able to "see" postgres container
  # TODO: check if podman-comopose already suppports the "profiles" feature
  #   ex:
  #     podman exec -it drogon /bin/bash
  #     cd app/src/
  #     drogon_ctl model create models
  # drogon:
  #   image: drogonframework/drogon
  #   container_name: drogon
  #   hostname: drogon
  #   network_mode: bridge
  #   depends_on:
  #     postgres:
  #       condition: service_healthy     
  #   volumes:
  #     - ./app:/app
  #   command: tail -f /dev/null  # leave the container running
  #   profiles: ["dev"]
